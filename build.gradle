buildscript {
    ext.kotlin_version = '1.1.3-2'

    repositories {
        maven { setUrl("http://repo.maven.apache.org/maven2") }
        maven { setUrl("https://dl.bintray.com/jetbrains/spek") }
        maven { setUrl('http://oss.jfrog.org/artifactory/oss-snapshot-local/') }
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // テスト用
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M4'
        classpath 'org.junit.platform:junit-platform-console:1.0.0-M4'
        // ドキュメント作成用
        classpath 'com.benjaminsproule:swagger-gradle-plugin:0.1.2'
        // Fat jat 用
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
    }
}

group = 'net.tasuwo.mitochat'
version = '1.0-SNAPSHOT'
description = """"""

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
// ドキュメント作成用
apply plugin: 'com.benjaminsproule.swagger'
// テスト用
apply plugin: 'org.junit.platform.gradle.plugin'
// Fat jar 用
apply plugin: 'com.github.johnrengelman.shadow'

repositories {
    mavenCentral()
    jcenter()
    maven { setUrl("https://dl.bintray.com/jetbrains/spek") }
}

dependencies {
    ext.jersey_version='2.26'

    // Kotlin
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: kotlin_version
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version

    // Jersey
    compile group: 'com.amazonaws.serverless', name: 'aws-serverless-java-container-jersey', version: '1.1.3'
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: jersey_version
    compile(group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: jersey_version) {
        exclude(module: 'hk2-api')
    }
    compile(group: 'org.glassfish.hk2', name: 'hk2-api', version: '2.5.0-b42') {
        exclude(module: 'javax.inject')
    }
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.0'
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

    // Swagger
    compile(group: 'io.swagger', name: 'swagger-jaxrs', version: '1.5.13') {
        exclude(module: 'jsr311-api')
        exclude(module: 'slf4j-api')
    }
    compile(group: 'io.swagger', name: 'swagger-jersey-jaxrs', version: '1.5.13') {
        exclude(module: 'jersey-core')
    }

    // AWS
    ext.aws_java_sdk_version='1.11.363'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-core', version: aws_java_sdk_version
    compile group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb', version: aws_java_sdk_version
    compile group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: aws_java_sdk_version
    compile group: 'com.amazonaws', name: 'aws-lambda-java-events', version: '2.2.2'
    compile group: 'com.amazonaws', name: 'aws-lambda-java-core', version: '1.2.0'
    compile group: 'com.amazonaws', name: 'aws-lambda-java-log4j', version: '1.0.0'

    // Test
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '4.12.0-M4'
    testCompile group: 'org.jetbrains.spek', name: 'spek-api', version: '1.1.2'
    testCompile group: 'org.jetbrains.spek', name: 'spek-junit-platform-engine', version: '1.1.2'
    testCompile group: 'org.junit.platform', name: 'junit-platform-runner', version: '1.0.0-M4'
    testCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.0.3'
    testCompile group: 'io.rest-assured', name: 'json-path', version: '3.0.3'
    testCompile group: 'io.rest-assured', name: 'json-schema-validator', version: '3.0.3'
    testCompile group: 'com.fasterxml.jackson.module', name: 'jackson-module-jsonSchema', version: '2.9.0'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.8.47'
    testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '1.7.0'
    testCompile group: 'org.powermock', name: 'powermock-api-mockito2', version: '1.7.0'
    testCompile group: 'org.amshove.kluent', name: 'kluent', version: '1.28'
    testRuntime 'org.junit.platform:junit-platform-console:1.0.0-M4'
    testRuntime group: 'org.jetbrains.spek', name: 'spek-junit-platform-engine', version: '1.1.2'
}


/**
 * テスト用
 *
 * 単体テストの実行: ./gradlew unitTest
 * 統合テストの実行: ./gradlew integrationTest
 */

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}

sourceSets {
    unitTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/test/kotlin')
        }
        resources.srcDir file('src/test/resources')
    }
    integrationTest {
        kotlin {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/integrationTest/kotlin')
        }
        resources.srcDir file('src/integrationTest/resources')
    }
}

configurations {
    unitTestCompile.extendsFrom testCompile
    unitTestCompile.extendsFrom testRuntime
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

task unitTest(type: JavaExec) {
    classpath = project.sourceSets.unitTest.runtimeClasspath
    main 'org.junit.platform.console.ConsoleLauncher'
    args '--scan-class-path'
    args "--reports-dir=$buildDir/jupiter-results"
}

task integrationTest(type: JavaExec) {
    classpath = project.sourceSets.integrationTest.runtimeClasspath
    main 'org.junit.platform.console.ConsoleLauncher'
    args '--scan-class-path'
    args "--reports-dir=$buildDir/jupiter-results"
}

// test を無効化し、代わりに unitTest を実行する
test.dependsOn unitTest
test.enabled = false


/**
 * FatJar 生成用
 *
 * ./gradlew shadowJar
 */
shadowJar {
    baseName = 'shadow'
    classifier = null
    version = null
}


/**
 * swagger spec 生成用 (kotlin source code -> swagger spec)
 *
 * ./gradlew generateSwaggerDocumentation
 */
swagger {
    apiSource {
        springmvc = false
        locations = [ 'net.tasuwo.mitochat.resource' ]
        schemes = [ 'http', 'https' ]
        host = 'www.[host]:[port]'
        basePath = '/v1'
        info {
            title = 'みとちゃっと API'
            version = 'v1'
            description = '月ノ美兎と擬似チャットするための REST API'
            license {
                url = 'http://www.apache.org/licenses/LICENSE-2.0.html'
                name = 'Apache 2.0'
            }
        }
        swaggerDirectory = "${buildDir}/docs"
        outputFormats = "yaml"
    }
}
